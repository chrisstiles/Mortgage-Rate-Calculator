/*---------------------------*/
/* Mixins */
/*---------------------------*/

@import 'fonts';

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin placeholderStyles($color: #9c9c9c) {
  @include placeholder {
    color: $color;
    @content;
  }
}

@mixin noSelect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin textStyles {
  font-family: $sansSerif;

  p,
  label,
  div {
    font-family: $sansSerif;
    letter-spacing: -0.02em; // Fix for Interstate's odd letter spacing
  }

  button {
    letter-spacing: normal;
    font-family: $sansSerif;
  }

  a {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.2);
  }
}

@mixin targetIE {
  @media all and (-ms-high-contrast: none),
    (-ms-high-contrast: active) {
    @content;
  }
}

@mixin inputStyles($theme: light) {
  font-family: $sansSerif;
  display: flex;
  border-radius: 2px;
  height: 40px;
  font-size: 14px;
  width: 100%;
  position: relative;
  border: none;
  flex-shrink: 0;

  &.focus,
  &:focus {
    .icon {
      color: currentColor !important;
      opacity: 0.8;

      svg,
      path {
        fill: currentColor;
      }
    }
  }

  .icon,
  .input {
    font-size: inherit;
  }

  @if $theme == dark {
    &.dark {
      background-color: rgba(#fff, 0.15);
      box-shadow: 0px 1px 4px rgba(#000, 0.1);
      color: #fff;

      .input {
        color: #fff;
      }

      .icon {
        color: #cacaca;
      }

      &:hover {
        background-color: rgba(#fff, 0.18);
        box-shadow: 0px 1px 4px rgba(#000, 0.2);
      }

      &.focus,
      &:focus {
        background-color: rgba(#fff, 0.3) !important;
        box-shadow: 0px 1px 4px rgba(#000, 0.2);

        .input {
          @include placeholderStyles(#dddddd);
          @include targetIE {
            background-color: #937878;
          }
        }
      }

      &.hasError {
        background-color: rgba(#fbb2b2, 0.3);

        .icon {
          color: #fff0f0;
        }

        .input {
          @include placeholderStyles(rgba(253, 244, 244, 0.9));
          color: #fff0f0;
        }

        &:hover {
          background-color: rgba(#fbb2b2, 0.35);
        }

        &.focus {
          background-color: rgba(#fbb2b2, 0.45) !important;
        }
      }
    }
  } @else {
    background-color: #fff;
    color: #494949;
    box-shadow: 0 0 0 1px #e9e9e9, 0 4px 10px rgba(0, 0, 0, 0.04),
      0 1px 3px rgba(0, 0, 0, 0.07);

    .input {
      @include placeholderStyles(#979797);
      color: #494949;
    }

    .icon {
      color: #888888;
    }

    &:hover {
      box-shadow: 0 0 0 1px #d8d8d8, 0 4px 10px rgba(0, 0, 0, 0.04),
        0 1px 3px rgba(0, 0, 0, 0.07);
    }

    &.focus,
    &:focus {
      box-shadow: 0 0 0 1.6px $darkTeal, inset 0 0 0 0.6px $darkTeal;

      .icon {
        color: $darkTeal;
        opacity: 1;

        svg,
        path {
          color: $darkTeal;
        }
      }
    }

    &.hasError {
      background-color: #fff8f7;
      box-shadow: 0 0 0 1px #f3dcdc, 0 4px 10px rgba(0, 0, 0, 0.04),
        0 1px 3px rgba(0, 0, 0, 0.07);

      .icon {
        color: #9e6e6c;
      }

      .input {
        @include placeholderStyles(#b4908d);
        color: #71413f;
      }

      &:hover {
        box-shadow: 0 0 0 1px #e9caca, 0 4px 10px rgba(0, 0, 0, 0.04),
          0 1px 3px rgba(0, 0, 0, 0.07);
      }

      &.focus {
        box-shadow: 0 0 0 1.6px #d47070, inset 0 0 0 0.6px #d47070;
      }
    }
  }
}

@mixin dark {
  @at-root .dark & {
    @content;
  }
}
